model_params:
  model: SegmentationModelPytorch
  num_classes: 4
  arch: Unet
  encoder: resnet34

args:
  expdir: "catalyst_segment"
  logdir: "log"

stages:

  data_params:
    num_workers: 8
    batch_size: 28
    per_gpu_scaling: True
    img_folder: 'data/input/train_pseudolabel_images/'
    mask_folder: 'data/train_masks/'
    fold_csv: 'data/masks.csv'
    fold_number: 0

  state_params:
    main_metric: dice
    minimize_metric: False

  criterion_params:
    criterion: BCEDiceLoss

  stage1:      
    scheduler_params:
      scheduler: OneCycleLR
      num_steps: 200
      warmup_steps: 70
      init_lr: 0.00004
      lr_range: [0.001, 0.00004]
      #init_lr: 0.00008
      #lr_range: [0.002, 0.00008]
      momentum_range: [0.85, 0.95]
    
    callbacks_params:
      loss:
        callback: CriterionCallback
      optimizer:
        callback: OptimizerCallback
      saver:
        callback: CheckpointCallback
        #resume: 'models/resnet50_weight.pth'
      dice:
        callback: DiceCallback
      scheduler:
        callback: SchedulerCallback
  
    state_params:
      num_epochs: 300

    optimizer_params:
      optimizer: Adam
      lr: 0.001
      weight_decay: 0.0001
      no_bias_weight_decay: False
      layerwise_params:
        model.encoder*:
          lr: 0.00001
        model.decoder*:
          lr: 0.001